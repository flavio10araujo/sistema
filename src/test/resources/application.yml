server:
  port: 5000 # ElasticBeanstalk listens to port 5000.

spring:
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    test-on-borrow: true
    validation-query: SELECT 1
  jpa:
    database: MYSQL
    hibernate:
      ddl-auto: validate
      show_sql: false
  thymeleaf:
    cache: false
  social:
    facebook:
      appId: ${FACEBOOK_APP_ID}
      appSecret: ${FACEBOOK_APP_SECRET}

google:
  recaptcha:
    secret: ${GOOGLE_RECAPTCHA_SECRET}

pagSeguro:
  contentType:
    formUrlEncoded: application/x-www-form-urlencoded
  acceptHeader:
    xml: application/vnd.pagseguro.com.br.v1+xml;charset=ISO-8859-1
  encoding: ISO-8859-1
  serviceTimeout: 20
  environment:
    type: production
    production:
      webserviceUrl: https://ws.pagseguro.uol.com.br
    sandbox:
      webserviceUrl: https://ws.sandbox.pagseguro.uol.com.br
  credential:
    email: ${PAGSEGURO_CRED_EMAIL}
    production:
      token: ${PAGSEGURO_CRED_PROD_TOKEN}
      appId: ${PAGSEGURO_PROD_APP_ID}
      appKey: ${PAGSEGURO_PROD_APP_KEY}
    sandbox:
      token: ${PAGSEGURO_CRED_SANDBOX_TOKEN}
      appId: ${PAGSEGURO_SANDBOX_APP_ID}
      appKey: ${PAGSEGURO_SANDBOX_APP_KEY}
  application:
    charset: ISO-8859-1
  log:
    active: true
  checkoutService:
    servicePath: /v2/checkout
    production:
      checkoutUrl: https://pagseguro.uol.com.br/v2/checkout/payment.html
    sandbox:
      checkoutUrl: https://sandbox.pagseguro.uol.com.br/v2/checkout/payment.html
  paymentRequestService:
    servicePath: /payment-request
    findByCodePath: /transactions/payment-request
  paymentService:
    nf:
      description: Aulas Polifono.com
    production:
      sessions: https://ws.pagseguro.uol.com.br/v2/sessions
      installments: https://ws.pagseguro.uol.com.br/v2/installments
      directPayment: https://ws.pagseguro.uol.com.br/v2/transactions
      paymentMethods: https://ws.pagseguro.uol.com.br/v2/payment-methods
    sandbox:
      sessions: https://ws.sandbox.pagseguro.uol.com.br/v2/sessions
      installments: https://ws.sandbox.pagseguro.uol.com.br/v2/installments
      directPayment: https://ws.sandbox.pagseguro.uol.com.br/v2/transactions
      paymentMethods: https://ws.sandbox.pagseguro.uol.com.br/v2/payment-methods
  authorizationService:
    servicePath: /v2/authorizations/request
    notificationPath: /v2/authorizations/notifications/
    findByCodePath: /v2/authorizations/
    findByDatePath: /v2/authorizations
    production:
      authorizationUrl: https://pagseguro.uol.com.br/v2/authorization/request.jhtml
    sandbox:
      authorizationUrl: https://sandbox.pagseguro.uol.com.br/v2/authorization/request.jhtml
  recurrenceService:
    servicePath: /payment-request/recurrence
    findByCodePath: /payment-request/recurrence
    cancelByCodePath: /payment-request/recurrence/cancel
  notificationService:
    paymentRequest: /payment-request/notifications
    production:
      url: https://ws.pagseguro.uol.com.br/v2/transactions/notifications/
    sandbox:
      url: https://ws.sandbox.pagseguro.uol.com.br/v2/transactions/notifications/
  transactionSearchService:
    production:
      url: https://ws.pagseguro.uol.com.br/v2/transactions
    sandbox:
      url: https://ws.sandbox.pagseguro.uol.com.br/v2/transactions

app:
  general:
    name: Polifono.com
    slogan: A vida sem m\u00FAsica seria um engano.
    url: www.polifono.com
  email:
    charset: UTF-8
    hostName: email-smtp.sa-east-1.amazonaws.com
    smtpPort: 587
    authentication:
      login: ${EMAIL_AUTH_LOGIN}
      password: ${EMAIL_AUTH_PASSWORD}
    accounts:
      general:
        address: polifono@polifono.com
        to: polifono.oficial@gmail.com
      noReply:
        address: polifono@polifono.com
  configs:
    credits:
      creation: 5 # How many credits the student receives when creating an account.
      levelCompleted: 1 # How many credits the student receives when completing a level.
      gameCompleted: 3 # How many credits the student receives when completing a game.
      buy:
        min: 5 # Minimum amount of credits that can be bought.
        max: 85 # Maximum amount of credits that can be bought.
      priceForEachUnityRange01: 2.00 # Price for each unity when buying less than 25 credits.
      priceForEachUnityRange02: 1.50
      priceForEachUnityRange03: 1.00
